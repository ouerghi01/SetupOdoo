version: '2'
services:
  db1:
    image: postgres:17
    user: root
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo18@2024
      - POSTGRES_DB=postgres
    restart: always             # run as a service
    volumes:
        - ./postgresql:/var/lib/postgresql/data


  odoo:
    image: odoo:18
    user: root
    depends_on:
      - db1
    ports:
      - "10017:8069"
      - "20017:8072" # live chat
    tty: true
    command: --
    environment:
      - HOST=db1
      - USER=odoo
      - PASSWORD=odoo18@2024
      - PIP_BREAK_SYSTEM_PACKAGES=1
    volumes:
      #- /etc/timezone:/etc/timezone:ro
      #- /etc/localtime:/etc/localtime:ro
      - ./entrypoint.sh:/entrypoint.sh
      - ./addons:/mnt/extra-addons
      - ./etc:/etc/odoo
    restart: always          
  
  generate-cert:
    image: alpine
    volumes:
      - ./ssl:/ssl
    entrypoint: >
      sh -c "apk add openssl && 
      openssl req -x509 -nodes -days 365 -newkey rsa:2048 
      -keyout /ssl/odoo.key -out /ssl/odoo.crt 
      -subj '/CN=odoo.local'"
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - odoo
    entrypoint: >
      sh -c "while [ ! -f /etc/nginx/ssl/odoo.crt ]; do echo 'Waiting for cert...'; sleep 2; done && nginx -g 'daemon off;'"


networks:
  default:
    driver: bridge
